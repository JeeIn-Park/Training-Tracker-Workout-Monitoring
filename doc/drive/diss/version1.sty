\section{Initial Release: Emphasising Core Features and Standard
Tracking Capabilities}

I begin by identifying and exploring the factors that affect user engagement in fitness tracking applications. This process has been shown to  position applications for success in a competitive market \cite{Hallsteinsen2008}. By clearly defining these fundamental aspects, developers can prevent feature creep— the inclusion of unnecessary features that do not serve the app's primary purpose.  This focused approach maintains essential functionality, optimises resource allocation, and improves the user experience by making the app more intuitive and easier to navigate \cite{Lieberman2006}.

Then, I am going to employ those factors for my primary version, minimal viable product(MVP) of the app. By focusing on core features, it streamlines the immediate construction phase and prioritizes resources efficiently, reducing time and costs associated with developing more complex features that may not be essential at the early stages. The MVP serves as the foundational build, incorporating only the essential functionalities needed. The MVP implementation ensures that the development process is structured and efficient, setting a solid foundation for future scalability of the application. 


\subsection{Impact Analysis of Key Features in Fitness Apps}

In this section I break down the understanding of the psychology of user engagement into five attributes:[factors from below], which are critical in mobile applications. \cite{Myers2000}. These attributes will provide a basis on which initial design and the development lifecycle can be built. And then I will analyse fitness tracking apps' features respect to these attributes for selecting core features to implement. 

\item{Motivation}
Motivation engages users to workout, allowing users to meet personal fitness goals. This substantially increases the likelihood of app retention and routine adherence. 

\item{Consistency Assistance}
Consistency ensures the users to stick to their fitness journey, encouraging regular app usage. This is crucial for habit formation, fostering a routine usage pattern.

\item{Simplicity}
 Simplicity means focusing on core functionalities and clean interface, which enhances the app's ease of integration into daily routines and its overall user-friendliness. Avoiding unnecessary features that can clutter the app and confuse the use, and a simple interface with intuitive navigation helps users understand how to use the app quickly.

\item{Accuracy}
 Accuracy of the data collected by the app builds trust. Trust in the app’s data accuracy is critical, as it not only impacts user confidence in the app but also influences their long-term fitness strategies and outcomes.

\item{Privacy}
The sensitivity of personal data handled by fitness apps heightens the importance of privacy considerations. Transparency in data management builds trust, ensuring users feel safe sharing their health data with the app.




Each feature plays a pivotal role in shaping the user's experience and the app's success. 
It is important to establish a framework for understanding their broader impacts before delving into the specifics of individual features. By highlighting the benefits and potential drawbacks of each feature, how each feature collectively contributes to a fitness application will be explored. Insights into how features enhance user satisfaction and the exercise experience determine ability to engage users and integrate seamlessly into their daily lives. A comprehensive assessment of each feature's benefits and limitations also allows developers to allocate resources judiciously, focusing on the most impactful features while minimizing investment in less critical areas.


\subsubsection{Workout Analysis} 

Workout Analysis Features comprise a comprehensive set of tools for tracking and evaluating athletic performance over time. Utilising various metrics, these tools chart an individual's progress, offering insights into their physical strengths and areas for enhancement. The continuous display of trends and performance improvements is crucial for the regular assessment of a user’s fitness journey.

A key benefit of Workout Analysis Features is their ability to demonstrate quantifiable progress towards fitness goals, thereby boosting user motivation and consistency. Observing concrete progress and receiving performance feedback encourages users to persist and surpass their objectives, significantly aiding in sustained user engagement by continuously highlighting their accomplishments and necessary steps for ongoing improvement. These tools enable precise adjustments to workout plans based on solid data, facilitating more efficient training and better physical results. Additionally, the automation of data processing through smartphones—from gathering to calculating data—reduces errors common in manual entries, increasing data reliability and saving time. This automation simplifies the documentation and analysis of workout information, presenting it in easily understandable formats like graphs and charts, which help users easily visualise and comprehend their fitness progress over time.

Nevertheless, deploying Workout Analysis Features raises concerns, especially regarding privacy and data security. Storing and processing personal workout data, which may include sensitive health information, introduces potential risks. Users must be confident in the security of their data and the preservation of their privacy, which is not always assured. The possibility of a data breach could result in unauthorised access to personal information, emphasising the importance of robust security protocols and clear data management policies in fitness apps. 

    
\subsubsection{Goal Setting}

Goal Setting Features help users define and track fitness goals that align with their health ambitions. These features facilitate the establishment of specific, measurable objectives across various areas. Users input precise targets into these tools to monitor their advancement and remain focused on reaching their fitness milestones.

Creating explicit fitness goals is vital within any workout regimen, acting as a motivator and encouraging consistent exercise. Setting clear targets provides a structured guide for daily activities, increasing commitment to the exercise plan. This methodical setup sustains high motivation by offering achievable milestones, which enhance users' sense of achievement as they see their own progress. The goals' visibility in the app consistently reminds users of their aims, promoting ongoing interaction with the fitness program and increasing the chances of long-term app engagement.

However, there are drawbacks to setting goals, especially when the targets are unrealistic. Goals that do not account for an individual’s physical limitations or realistic circumstances can cause feelings of failure and dissatisfaction, potentially reducing motivation and negatively affecting overall fitness engagement. Additionally, the requirement to enter and store personal health data for goal tracking raises privacy issues. The robustness of the app's security measures to safeguard sensitive information is essential; inadequate security can lead to data breaches, decreasing user trust and posing risks to personal information.

    
\subsubsection{Exercise Personalising}

Exercise personalisation is a feature that improves the flexibility of fitness apps by enabling users to incorporate custom exercises into their routines, catering to everyone from mainstream fitness enthusiasts to those engaged in niche or highly specific activities.

This feature allows for the customisation by adding preferred or specialised exercises, meeting the varied needs and interests of users and significantly boosting their engagement and satisfaction with the app. It is especially useful for individuals involved in specialised sports or activities requiring unique movements not typically found in standard exercise databases. Personalisation not only keeps exercises diverse and interesting but also allows users to adapt their fitness plans for specific objectives, such as injury rehabilitation or focused muscle development. By supporting the integration of tailored exercises, these apps appeal to a wide array of fitness enthusiasts. The ability to add unique exercises that meet individual preferences and needs enhances the app’s usefulness and relevance, thus encouraging longer-term commitment and consistent exercise routines. Additionally, this feature increases the accessibility and inclusiveness of fitness apps, potentially attracting a larger audience with various physical abilities and training objectives.

However, exercise personalisation introduces several challenges. Users with limited knowledge of exercise fundamentals might add inappropriate or unsafe exercises to their routines, increasing the risk of injuries. Additionally, personalising exercises can complicate the app’s capacity to track and analyse performance effectively. While most fitness apps use algorithms designed to monitor progress with predefined exercises, these may not perform as well with customised activities. This can lead to less accurate tracking and feedback for non-standard exercises, potentially reducing the app's effectiveness in monitoring progress and offering valuable insights.


\subsubsection{Routine Personalising} 

Routine personalisation in fitness applications allows users to design and adjust their own workout routines and categories, tailoring exercises to suit their unique needs and preferences. This feature enables the development of tailored workout sessions by amalgamating various exercises to match individual fitness objectives or training preferences. Users can select exercises from a vast database and categorise them into different groups such as cardio, strength, flexibility, and balance. This categorisation is further refined by parameters such as the equipment required, the intensity level, and the specific muscle groups targeted, allowing users to customise their workouts to achieve distinct goals like weight loss, strength enhancement, or improved flexibility. This high degree of personalisation not only aids in organising workouts more efficiently but also ensures that the routines are comprehensive and cater to personal fitness goals, covering a broad spectrum of physical activities.

The ability to create personalised workout routines offers significant benefits as it accommodates a diverse range of users, from beginners to advanced athletes, and from yoga aficionados to weightlifting enthusiasts. This flexibility allows individuals to craft exercise plans that resonate with their personal fitness levels, objectives, and schedules. Users' active involvement in designing these routines fosters a deeper commitment to their fitness journey, increasing engagement and satisfaction. Structured plans are crucial as they help prevent neglecting certain types of exercises or muscle groups, thereby promoting a balanced training regime. Moreover, systematically categorised and pre-planned routines streamline progress tracking, facilitate the recognition of patterns, and aid in making adjustments to meet fitness goals effectively. This organisation enhances the app's utility, making it easier for users to start exercising promptly, thus improving efficiency and user experience. By personalising their workout schedules, users gain a sense of ownership and control, which significantly boosts their motivation and enjoyment, ensuring that the regimen remains comprehensive and well-coordinated.

However, while the customisation of workout routines brings numerous advantages, it also poses certain challenges. Properly utilising this feature requires a solid understanding of exercise design principles to avoid creating unbalanced or ineffective workouts. For inexperienced users, there is a risk of developing routines that are either too demanding or insufficiently challenging, which can lead to injuries or lack of motivation. Additionally, personalising workouts complicates the app’s capacity to track and analyse performance accurately. Fitness apps are generally equipped with algorithms that are fine-tuned for standard workouts, and these may not adapt well to customised, user-defined categories, potentially leading to imprecise feedback and suboptimal tracking of progress. This could detract from the app’s effectiveness in aiding users to meet their fitness goals. 

    
\subsubsection{Fitness Calendar} 
Planning features in fitness applications, particularly the use of a workout planning calendar, are invaluable for helping users schedule individual workouts and manage their training phases. By allowing for the integration of fitness activities with other life commitments through a visual calendar, users can foster better habit formation, maintain regular exercise, and achieve a harmonious balance between fitness and other responsibilities.

The benefits of utilising a planning tool in fitness apps are significant. Effective planning facilitates the correct pacing of workouts, helping to prevent overtraining and injuries by ensuring adequate rest and recovery times. This structured approach not only enhances time management, allowing users to integrate their fitness routines seamlessly into their daily lives, but also supports the balancing of these commitments with personal and professional obligations. Effective planning aids in adhering to a consistent exercise routine by visually organising fitness activities around other commitments, leading to more realistic and sustainable workout plans and promoting better habit formation and balanced training.

However, integrating complex planning features into fitness apps can also present challenges. Over-planning may induce rigidity in exercise routines, making it difficult for users to adapt to unexpected changes in their schedule or physical condition, potentially leading to missed workouts or burnout. Additionally, while a comprehensive workout calendar can help integrate various activities, it may also complicate the app's interface, deterring users who prefer simpler interfaces. The presence of numerous features can overwhelm users, cluttering the app and creating confusion. Moreover, fitness apps are generally not designed to manage broader life scheduling needs, potentially reducing their effectiveness in meeting specific fitness planning requirements. Privacy concerns are another significant issue, as the storage of sensitive scheduling information necessitates robust security measures to protect user data. 

    
 \subsubsection{Reminders} 
 
Reminder features in fitness apps, such as workout notifications, are delivered through push notifications or alerts to inform users of upcoming workouts, integrating fitness more seamlessly into their daily routines. This feature ensures that workouts are not overlooked amidst the busy lives of users, enhancing the likelihood of achieving their fitness goals.

These reminders provide users with timely notifications, helping to maintain a regular workout schedule, which is essential for building and sustaining exercise habits. It facilitates better adherence to planned exercise regimens, making it easier for users to maintain a consistent exercise schedule. Especially when life becomes hectic, having a workout reminder ensures that exercise does not get sidelined. Regular alerts contribute to greater consistency in training, which is pivotal for the long-term development of healthy, consistent exercise routines.

While reminder features are designed to enhance consistent motivation, they come with potential downsides, such as notification fatigue. If notifications become too intrusive, users might start ignoring alerts or even disable them, leading to decreased engagement with the app. Excessive notifications can become a source of annoyance rather than assistance if they are too frequent or not intelligently scheduled to align with the user's lifestyle. This irritation can diminish user engagement and motivation, reducing the likelihood of the app’s continued use.

    
\subsubsection{Social Networking} 
Socialising features in fitness apps enable users to share their workout progress and achievements with others, either within the app's community or on external social media platforms. These features foster a sense of community and collective engagement, allowing users to celebrate milestones publicly. By connecting with friends or joining fitness communities, users can share their daily achievements and compare their progress with that of their peers. The inclusion of social features in fitness apps offers several benefits, transforming exercise from a solitary activity into a shared, communal experience.

Socialising features enable users to connect through shared challenges and goals, leveraging the competitive and cooperative aspects of fitness. By allowing users to share their progress, these features foster a sense of community, providing social reinforcement and accountability, which are crucial motivators for maintaining an active lifestyle. Celebrating milestones publicly can enhance motivation and accountability, tapping into the social aspects of fitness, which can be a powerful motivator. The encouragement and support received from peers within the app can be highly motivating, helping users to remain consistent with their fitness routines.

Despite their benefits, socialising features in fitness apps can also present challenges. Privacy concerns are a significant issue for some users who may prefer to keep their fitness journey private rather than share details publicly, especially if the app shares updates beyond its platform or employs lax privacy controls. Moreover, constant social feeds and notifications can shift the focus from personal fitness goals to social interaction, potentially turning the app into a distraction similar to traditional social media. This can lead to negative comparisons with others, which might demotivate users. Furthermore, an overreliance on external validation for motivation can diminish intrinsic motivation, reducing the personal satisfaction derived from exercising. Additionally, apps with extensive social features can become complex to navigate, featuring numerous menus, settings, and notifications related to social interactions, which can complicate the user experience and detract from the app's core fitness functions.

    
\subsubsection{Gamification} 

Gamification features in fitness apps incorporate elements traditionally found in games, such as badges, achievements, points, levels, and progress bars, to motivate and engage users. By engaging in specific challenges, completing quests, or reaching fitness milestones, users can earn rewards and visually track their advancement, similar to progression systems found in video games. These features reward users for completing specific challenges and quests, allowing them to "level up" or observe their progress through visual progress bars. 

This integration of game-like elements provides tangible rewards for users’ efforts, enhancing their motivation and engagement with the app, thereby making the fitness journey both fun and rewarding. The inclusion of gamification elements in fitness routines can motivate users to persist in their fitness endeavors by rewarding them for meeting specific goals and challenges.

While gamification can offer benefits, it also has potential drawbacks. The focus on earning rewards and leveling up can sometimes overshadow the fundamental aspects of fitness. This shift in focus from health improvement to winning or scoring can undermine the true purpose of fitness activities. Furthermore, the novelty of gamification may diminish over time, which could decrease its motivational effect. Some users might perceive these features as gimmicky or trivial, detracting from the app's perceived value. Additionally, fitness apps with gamification interfaces can be challenging to navigate, potentially alienating users who prefer more straightforward, easy-to-use tools. The need to understand and engage with various gamification elements like point systems and levels requires extra cognitive effort, which could overwhelm some users, making the app seem cumbersome and detracting from its primary function of health monitoring and improvement. 


\subsection{feature selection} 


\begin{table}[ht]
\centering
\begin{tabular}{|m{4cm}|*{5}{c|}}
\hline
 & \textbf{Motivation} & \textbf{Consistency Assistance} & \textbf{Simplicity} & \textbf{Accuracy} & \textbf{Privacy} \\ \hline
\textbf{Workout Analysis}        & + & + & + & + & - \\ \hline
\textbf{Goal Setting}            &   & + &   &   & - \\ \hline
\textbf{Exercise Personalising}  &   & + & + & - &   \\ \hline
\textbf{Routine Personalising}   & + & + & + & - &   \\ \hline
\textbf{Fitness Calendar}        & - & + & - &   & - \\ \hline
\textbf{Reminders}               & - & + &   &   &   \\ \hline
\textbf{Social Networking}       &   & + & - &   & - \\ \hline
\textbf{Gamification}            & + & - & - &   &   \\ \hline
\end{tabular}
\caption{Impact of various features on key properties in fitness tracking application design. The symbols `+' and `-' indicate a positive and negative effect, respectively, on the corresponding property. An empty cell indicates no effect. This table aids in identifying which features enhance or detract from user motivation, consistency assistance, simplicity, accuracy, and privacy.}
\end{table}


The MVP will integrate core features that have demonstrated a significant positive impact on user engagement and satisfaction, according to the feature analysis table. The selection of features for the MVP is based on their ability to enhance key properties with minimal negative impacts on them. The features chosen for the MVP include:

\textbf{Workout Analysis}: This feature supports motivation and consistency by providing users with detailed feedback on their performance, helping them to track progress effectively.
\textbf{Routine Personalising}: Enhances motivation by allowing users to tailor their workouts, which improves both the personal relevance and effectiveness of the fitness regimen.
\textbf{Exercise Personalising}: Increases accessibility by enabling users to include exercises that cater to their specific needs and preferences, promoting broader usability.

The initial version of app functions similarly to standard fitness trackers, emphasizing customizable tracking features. Users can log quantifiable data, manage exercises by adding or deleting them, and record their workouts. Additionally, the app's version can be verified through the settings screen.


\subsection{mvp implementation} 

The development process begins with selecting the appropriate template from Android Studio's "New Project" options. The Bottom Navigation Views Activity template is chosen for a fitness app aimed at providing an intuitive navigation. This template offers a basic yet effective app structure that includes a navigation bar at the bottom of the screen, allowing users to easily switch between different views or functionalities of the app.

\begin{figure}[h]
    \centering
    \includegraphics[width=0.9\textwidth]{figures/MVVM-MVP.png}
    \caption{Diagram of the initial version of the app using a Model-View-ViewModel (MVVM) architecture. This diagram highlights the modular organization between the Model, View, and ViewModel components.}
    \label{fig:mvp_MVVM}
\end{figure}


\subsubsection{Home Fragment: Log Activity}

\noindent
The Home Fragment features two main views: a TextView and a RecyclerView. The TextView is positioned to provide user instructions, prominently displaying the message "select exercise" to guide users in choosing from the list displayed in the RecyclerView below. This RecyclerView, located at the bottom of the layout, presents a list of exercises added by the user, with the top part of the layout left empty for muscle visualization purposes. 

The adapter for this RecyclerView has methods for adding and removing items. The `addItem` and `removeItem` methods allow direct manipulation of the adapter's dataset, with `addItem` introducing a new `ExerciseCard` to the list and `removeItem` eliminating an entry from a specified position. Both operations utilize `submitList()`, a `ListAdapter` method that refreshes the list on a background thread to calculate differences, subsequently updating the UI on the main thread. This integrated approach streamlines dataset management within the `HomeCardAdapter`, enhancing both functionality and user experience.

\begin{figure}[h]
    \centering
    \begin{minipage}[t]{0.45\textwidth}
        \centering
        \includegraphics[width=\textwidth]{figures/MVP_home.png} 
        \caption{Screenshot of the HomeFragment displayed on a Moto G5 testing device.}
        \label{fig:mvp_homeFragment}
    \end{minipage}\hfill
    \begin{minipage}[t]{0.45\textwidth}
        \centering
        \includegraphics[width=\textwidth]{figures/MVP_addLog.png} 
        \caption{Screenshot of the AddLogActivity
displayed on a Moto G5 testing device.}
        \label{fig:mvp_addLogActivity}
    \end{minipage}
\end{figure}

\noindent
The ViewHolder incorporates a TextView to display an exercise, detailing the exercise name, last activity date, main muscle group, sub muscle group, tags, and the personal best 1RM record. In the MVP stage, the tags and 1RM calculation algorithm were not implemented, resulting in "null" for tags and "placeholder" for the 1RM record, as displayed in Figure \ref{fig:mvp_homeFragment}. The bind method of the ViewHolder not only populates the information from the data but also sets an OnClickListener. This button triggers the AddLogActivity when clicked, transferring the ExerciseCard data as an extra. It facilitates interaction within the RecyclerView items, enabling the initiation of new activities and data transmission. 

When a user selects an exercise from the RecyclerView, the AddLogActivity is launched via this Intent mechanism, allowing them to log details for the selected exercise. The "ExerciseLog" data class supports nullable values for mass (mass: Float?) and repetitions (rep: Int?), allowing users to optionally leave these fields blank for a broader range of exercise logging. This flexibility in data entry, combined with structured data storage, streamlines data handling and promotes efficient data exchange across the application components. When a user enters their exercise log and clicks the "add log" button, the log is stored locally using the "LogStorage.kt" class. This class is responsible for loading, saving, adding, and deleting logs from the storage. It utilizes local storage through the "exercise\_logs.dat" file for storing all log entries. The operations within this class are safeguarded by try and catch blocks to handle potential file I/O errors.


\subsubsection{Status Fragment: Customising Exercise}

\begin{figure}[h]
    \centering
    \begin{minipage}[t]{0.3\textwidth}
        \centering
        \includegraphics[width=\textwidth]{figures/MVP_status.png}
        \caption{Screenshot of the StatusFragment displayed on a Moto G5 testing device.}
        \label{fig:mvp_statusFragment}
    \end{minipage}\hfill
    \begin{minipage}[t]{0.3\textwidth}
        \centering
        \includegraphics[width=\textwidth]{figures/MVP_addCard.png}
        \caption{Screenshot of the AddCardActivity displayed on a Moto G5 testing device.}
        \label{fig:mvp_addCardActivity}
    \end{minipage}\hfill
    \begin{minipage}[t]{0.3\textwidth}
        \centering
        \includegraphics[width=\textwidth]{figures/MVP_addCard_spinner.png} 
        \caption{Screenshot of the AddCardActivity with an expanded spinner displayed on a Moto G5 testing device.}
        \label{fig:mvp_addCardActivity_spinner}
    \end{minipage}
\end{figure}


\subsubsection{Setting Fragment: Version Control}

The Status Fragment is modified from the template's Dashboard Fragment and plays a crucial role in allowing users to customize the exercises they wish to track with the app. This customization is achieved through the capability to add and delete exercises directly within this fragment.

By tapping the "ADD A NEW EXERCISE" button, users are directed to the "AddCardActivity." Here, they can input the name of the exercise using an EditText view and select muscles for both the main and sub categories using spinners. These spinners are populated with muscle names stored in an array within the app/src/main/res/values directory, facilitating easy and accurate entry of muscle groups for customized exercises.

Upon entering the required data and clicking the "ADD" button, the new exercise is saved locally in the "exercise\_cards.dat" file managed by CardStorage.kt. Each exercise card includes a unique ID and the time it was added—both automatically generated—as well as the initial last activity date, set to the day the card is created. Additionally, a tag attribute implemented as a List<String> is included to lay the groundwork for future categorization features, allowing exercises to be organized according to user preference.

If users decide to remove an exercise, they can do so by clicking the "DELETE" button. Any additions or deletions of cards are promptly reflected in the RecyclerView displayed on both the Status and Home Fragments, kept current through the use of a ListAdapter and LiveData. This setup ensures that the interface is always up-to-date, showing the latest changes made by the user.


\subsubsection{Setting Fragment}


The Settings Fragment has been developed by modifying the Notifications Fragment that comes with the Bottom Navigation Views Activity template. It incorporates the use of a SettingViewModel, which utilizes LiveData to manage data related to settings. Specifically, this model tracks the current version of the app. It attempts to retrieve the app version from the package manager, and if successful, it updates the LiveData with the version information, formatted as "app version : [version name]". This setup allows users to view the most current version of the app directly from the Settings Fragment, ensuring they have access to up-to-date information. If there is an issue retrieving the version data, such as the package name not being found, the error is handled gracefully, maintaining the app's stability.

